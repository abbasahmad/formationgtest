load("@rules_cc//cc:defs.bzl", "cc_test")

cc_test(
    name = "first_example",
    srcs = ["first_example.cc"],
    deps = [
        "//gmock_atm/bankserver:BankServerLib",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "on_call",
    srcs = ["on_call.cc"],
    deps = [
        "//gmock_atm/bankserver:BankServerLib",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "expect_call",
    srcs = ["expect_call.cc"],
    deps = [
        "//gmock_atm/bankserver:BankServerLib",
        "@googletest//:gtest_main",
    ],
)


cc_test(
    name = "expect_call_matchers",
    srcs = ["expect_call_matchers.cc"],
    deps = [
        "//gmock_atm/bankserver:BankServerLib",
        "@googletest//:gtest_main",
    ],
)


cc_test(
    name = "expect_call_cardinality",
    srcs = ["expect_call_cardinality.cc"],
    deps = [
        "//gmock_atm/bankserver:BankServerLib",
        "@googletest//:gtest_main",
    ],
)


cc_test(
    name = "expect_call_order",
    srcs = ["expect_call_order.cc"],
    deps = [
        "//gmock_atm/bankserver:BankServerLib",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "expect_call_dodefault",
    srcs = ["expect_call_dodefault.cc"],
    size = "small",
    deps = [
        "//gmock_atm/bankserver:BankServerLib",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "expect_call_return",
    srcs = ["expect_call_return.cc"],
    size = "small",
    deps = [
        "//gmock_atm/bankserver:BankServerLib",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "expect_call_side_effects",
    srcs = ["expect_call_side_effects.cc"],
    size = "small",
    deps = [
        "//gmock_atm/bankserver:BankServerLib",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "expect_call_invoke",
    srcs = ["expect_call_invoke.cc"],
    size = "small",
    deps = [
        "//gmock_atm/bankserver:BankServerLib",
        "@googletest//:gtest_main",
    ],
)

cc_test(
    name = "expect_call_sticky_rules",
    srcs = ["expect_call_sticky_rules.cc"],
    size = "small",
    deps = [
        "//gmock_atm/bankserver:BankServerLib",
        "@googletest//:gtest_main",
    ],
)


cc_test(
    name = "expect_call_checkpoint",
    srcs = ["expect_call_checkpoint.cc"],
    size = "small",
    deps = [
        "//gmock_atm/bankserver:BankServerLib",
        "@googletest//:gtest_main",
    ],
)
